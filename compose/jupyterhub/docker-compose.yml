version: '3.7'

services:
  hub-db:
    image: postgres:9.5
    container_name: jupyterhub-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: ${DB_VOLUME_CONTAINER}
    environment:
      POSTGRES_PASSWORD: "test"
    volumes:
      - "db:${DB_VOLUME_CONTAINER}"
    networks:
      - chassis
    dns: 172.30.30.30

  hub:
    depends_on:
      - hub-db
    image: jupyterhub/jupyterhub
    restart: always
    container_name: jupyterhub
    volumes:
      # Bind Docker socket on the host so we can connect to the daemon from
      # within the container
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      # Bind Docker volume on host for JupyterHub database and cookie secrets
      - "data:${DATA_VOLUME_CONTAINER}"
      # Bind config volume
      - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py"
    command: >
      jupyterhub
    #command: >
    #  jupyterhub -f /srv/jupyterhub/jupyterhub_config.py
    ports:
      - "9999:8000"
    links:
      - hub-db
    environment:
      # Postgres db info
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: hub-db
    labels:
      GLOBAL_NAME: jupyterhub
      traefik.enable: true
      traefik.http.routers.demolinks.entrypoints: https
    networks:
      - chassis
    dns: 172.30.30.30

volumes:
  data:
    external:
      name: ${DATA_VOLUME_HOST}
  db:
    external:
      name: ${DB_VOLUME_HOST}

networks:
  chassis:
    external: true
